// Toto je skriptova silenost, ale lepsi reseni aby to bylo alespon trochu kontrolovatelne me nenapada

Block
{
  Frame Ally1;		FRM_FindFrame(Ally1, "Ally_1");
  Frame Ally2;		FRM_FindFrame(Ally2, "Ally_2");
  Frame Ally3;		FRM_FindFrame(Ally3, "Ally_3");
  Frame Ally4;		FRM_FindFrame(Ally4, "Ally_4");
  Frame Ally5;		FRM_FindFrame(Ally5, "Ally_5");

  Frame Blue1;		FRM_FindFrame(Blue1, "Blue_1");
  Frame Blue2;		FRM_FindFrame(Blue2, "Blue_2");
  Frame Blue3;		FRM_FindFrame(Blue3, "Blue_3");
  Frame Blue4;		FRM_FindFrame(Blue4, "Blue_4");
  Frame Blue5;		FRM_FindFrame(Blue5, "Blue_5");
  Frame Blue6;		FRM_FindFrame(Blue6, "Blue_6");
  Frame Blue7;		FRM_FindFrame(Blue7, "Blue_7");
  Frame Blue8;		FRM_FindFrame(Blue8, "Blue_8");
  Frame Blue9;		FRM_FindFrame(Blue9, "Blue_9");
  Frame Blue10;	FRM_FindFrame(Blue10, "Blue_10");
  Frame Blue11;	FRM_FindFrame(Blue11, "Blue_11");
//*//  Frame Blue12;	FRM_FindFrame(Blue12, "Blue_12");
  Frame Blue13;	FRM_FindFrame(Blue13, "Blue_13");
  Frame Blue14;	FRM_FindFrame(Blue14, "Blue_14");
  Frame Blue15;	FRM_FindFrame(Blue15, "Blue_15");
//*//  Frame Blue16;	FRM_FindFrame(Blue16, "Blue_16");
  Frame Blue17;	FRM_FindFrame(Blue17, "Blue_17");
  Frame W1_1;		FRM_FindFrame(W1_1, "Wave1_1");
//*//  Frame W1_2;		FRM_FindFrame(W1_2, "Wave1_2");
  Frame W1_3;		FRM_FindFrame(W1_3, "Wave1_3");
//*//  Frame W1_4;		FRM_FindFrame(W1_4, "Wave1_4");
  Frame W1_5;		FRM_FindFrame(W1_5, "Wave1_5");
  Frame W2_1;		FRM_FindFrame(W2_1, "Wave2_1");
  Frame W2_2;		FRM_FindFrame(W2_2, "Wave2_2");
  Frame W2_3;		FRM_FindFrame(W2_3, "Wave2_3");
//*//  Frame W2_4;		FRM_FindFrame(W2_4, "Wave2_4");
//*//  Frame W2_5;		FRM_FindFrame(W2_5, "Wave2_5");

  SetWhenever( B1, False);
  SetWhenever( B2, False);
  SetWhenever( B3, False);
  SetWhenever( B4, False);
  SetWhenever( B5, False);
  SetWhenever( B6, False);
  SetWhenever( B7, False);
  SetWhenever( B8, False);
  SetWhenever( B9, False);
  SetWhenever( B10, False);
  SetWhenever( B11, False);
  //*//SetWhenever( B12, False);
  SetWhenever( B13, False);
  SetWhenever( B14, False);
  SetWhenever( B15, False);
//*//  SetWhenever( B16, False);
  SetWhenever( B17, False);
  SetWhenever( W11, False);
//*//  SetWhenever( W12, False);
  SetWhenever( W13, False);
//*//  SetWhenever( W14, False);
  SetWhenever( W15, False);
  SetWhenever( W21, False);
  SetWhenever( W22, False);
  SetWhenever( W23, False);
  //*//SetWhenever( W24, False);
  //*//SetWhenever( W25, False);
}
  Integer komu;
  Integer kdo = 0;

Goto TheEND;

Whenever B1   (  _FrameInRange(Blue1)<4 )    {  kdo = 1; Printf("B1 - is targer"); }	
Whenever B2   (  _FrameInRange(Blue2)<4 )    {  kdo = 2; Printf("B2 - is targer"); }
Whenever B3   (  _FrameInRange(Blue3)<4 )    {  kdo = 3; Printf("B3 - is targer"); }
Whenever B4   (  _FrameInRange(Blue4)<4 )    {  kdo = 4; Printf("B4 - is targer"); }
Whenever B5   (  _FrameInRange(Blue5)<4 )    {  kdo = 5; Printf("B5 - is targer"); }
Whenever B6   (  _FrameInRange(Blue6)<4 )    {  kdo = 6; Printf("B6 - is targer"); }
Whenever B7   (  _FrameInRange(Blue7)<4 )    {  kdo = 7; Printf("B7 - is targer"); }
Whenever B8   (  _FrameInRange(Blue8)<4 )    {  kdo = 8; Printf("B8 - is targer"); }
Whenever B9   (  _FrameInRange(Blue9)<4 )    {  kdo = 9; Printf("B9 - is targer"); }
Whenever B10 (  _FrameInRange(Blue10)<4 )  {  kdo = 10; Printf("B10 - is targer"); }
Whenever B11 (  _FrameInRange(Blue11)<4 )  {  kdo = 11; Printf("B11 - is targer"); }
//*//Whenever B12 (  _FrameInRange(Blue12)<4 )  {  kdo = 12; Printf("B12 - is targer"); }
Whenever B13 (  _FrameInRange(Blue13)<4 )  {  kdo = 13; Printf("B13 - is targer"); }
Whenever B14 (  _FrameInRange(Blue14)<4 )  {  kdo = 14; Printf("B14 - is targer"); }
Whenever B15 (  _FrameInRange(Blue15)<4 )  {  kdo = 15; Printf("B15 - is targer"); }
//*//Whenever B16 (  _FrameInRange(Blue16)<4 )  {  kdo = 16; Printf("B16 - is targer"); }
Whenever B17 (  _FrameInRange(Blue17)<4 )  {  kdo = 17; Printf("B17 - is targer"); }
Whenever W11 (  _FrameInRange(W1_1)<4 )  {  kdo = 18; Printf("B18 - is targer"); }
//*//Whenever W12 (  _FrameInRange(W1_2)<4 )  {  kdo = 19; Printf("B19 - is targer"); }
Whenever W13 (  _FrameInRange(W1_3)<4 )  {  kdo = 20; Printf("B20 - is targer"); }
//*//Whenever W14 (  _FrameInRange(W1_4)<4 )  {  kdo = 21; Printf("B21 - is targer"); }
Whenever W15 (  _FrameInRange(W1_5)<4 )  {  kdo = 22; Printf("B22 - is targer"); }
Whenever W21 (  _FrameInRange(W2_1)<4 )  {  kdo = 23; Printf("B23 - is targer"); }
Whenever W22 (  _FrameInRange(W2_2)<4 )  {  kdo = 24; Printf("B24 - is targer"); }
Whenever W23 (  _FrameInRange(W2_3)<4 )  {  kdo = 25; Printf("B25 - is targer"); }
//*//Whenever W24 (  _FrameInRange(W2_4)<4 )  {  kdo = 26; Printf("B26 - is targer"); }
//*//Whenever W25 (  _FrameInRange(W2_5)<4 )  {  kdo = 27; Printf("B27 - is targer"); }

  komu = _RandomInt(5) +1;
  SaveGameValue(25, kdo);

If ( komu == 1) {  SendSignal(Ally1, 25); }
If ( komu == 2) {  SendSignal(Ally2, 25); }
If ( komu == 3) {  SendSignal(Ally3, 25); }
If ( komu == 4) {  SendSignal(Ally4, 25); }
If ( komu == 5) {  SendSignal(Ally5, 25); }

OnSignal(1) // od Waves senderu 
{
Block
  {   
     SetWhenever( B1, True);
     SetWhenever( B2, True);
     SetWhenever( B3, True);
     SetWhenever( B4, True);
     SetWhenever( B5, True);
     SetWhenever( B6, True);
     SetWhenever( B7, True);
     SetWhenever( B8, True);
     SetWhenever( B9, True);
     SetWhenever( B10, True);
     SetWhenever( B11, True);
     //*//SetWhenever( B12, True);
     SetWhenever( B13, True);
     SetWhenever( B14, True);
     SetWhenever( B15, True);
     //*//SetWhenever( B16, True);
     SetWhenever( B17, True);
     SetWhenever( W11, True);
//*//     SetWhenever( W12, True);
     SetWhenever( W13, True);
//*//     SetWhenever( W14, True);
     SetWhenever( W15, True);
     SetWhenever( W21, True);
     SetWhenever( W22, True);
     SetWhenever( W23, True);
     //*//SetWhenever( W24, True);
     //*//SetWhenever( W25, True);
  }
}

Label TheEND:

