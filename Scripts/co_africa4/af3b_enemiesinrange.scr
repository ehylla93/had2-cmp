Block {
INTEGER cnt 			= 0;
INTEGER aktivovano 		= 0;
FRAME capture_activator;	FRM_FindFrame(capture_activator, "dummy_capture_activator");
INTEGER range		= 30;
FRAME radio;			FRM_FindFrame(radio, "m_prist_a03b_01");
INTEGER delaytime		= 10000;

FRAME en01;			FRM_FindFrame(en01, "AF3b_01");
FRAME en02;			FRM_FindFrame(en02, "AF3b_02");
FRAME en03;			FRM_FindFrame(en03, "AF3b_03");
FRAME en04;			FRM_FindFrame(en04, "AF3b_04");
FRAME en05;			FRM_FindFrame(en05, "AF3b_05");
FRAME en06;			FRM_FindFrame(en06, "AF3b_06");
FRAME en07;			FRM_FindFrame(en07, "AF3b_07");
FRAME en08;			FRM_FindFrame(en08, "AF3b_08");
FRAME en09;			FRM_FindFrame(en09, "AF3b_09");
FRAME en10;			FRM_FindFrame(en10, "AF3b_10");
FRAME en11;			FRM_FindFrame(en11, "AF3b_11");
FRAME en12;			FRM_FindFrame(en12, "AF3b_12");
FRAME en13;			FRM_FindFrame(en13, "AF3b_13");
FRAME en14;			FRM_FindFrame(en14, "AF3b_14");
FRAME en15;			FRM_FindFrame(en15, "AF3b_15");
FRAME en16;			FRM_FindFrame(en16, "AF3b_16");
FRAME en17;			FRM_FindFrame(en17, "AF3b_17");
FRAME en18;			FRM_FindFrame(en18, "AF3b_18");
FRAME en19;			FRM_FindFrame(en19, "AF3b_19");
FRAME en20;			FRM_FindFrame(en20, "AF3b_20");
FRAME en21;			FRM_FindFrame(en21, "AF3b_21");
FRAME en22;			FRM_FindFrame(en22, "AF3b_22");
FRAME en23;			FRM_FindFrame(en23, "AF3b_23");
FRAME en24;			FRM_FindFrame(en24, "AF3b_24");
FRAME en25;			FRM_FindFrame(en25, "AF3b_25");
FRAME en26;			FRM_FindFrame(en26, "AF3b_26");
FRAME en27;			FRM_FindFrame(en27, "AF3b_27");
FRAME en28;			FRM_FindFrame(en28, "AF3b_28");
FRAME en29;			FRM_FindFrame(en29, "AF3b_29");
FRAME en30;			FRM_FindFrame(en30, "AF3b_30");
FRAME en31;			FRM_FindFrame(en31, "AF3b_31");
FRAME en32;			FRM_FindFrame(en32, "AF3b_32");
FRAME en33;			FRM_FindFrame(en33, "AF3b_33");
}

goto END;

Whenever end_prepare (_ACTOR_GetState(radio) == 2)
{
  goto LOOP;
}

Label LOOP:
  cnt = 0;    
  block
  {
  if((_ACTOR_GetState(en01)) AND (_FrameInRange(en01) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en02)) AND (_FrameInRange(en02) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en03)) AND (_FrameInRange(en03) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en04)) AND (_FrameInRange(en04) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en05)) AND (_FrameInRange(en05) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en06)) AND (_FrameInRange(en06) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en07)) AND (_FrameInRange(en07) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en08)) AND (_FrameInRange(en08) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en09)) AND (_FrameInRange(en09) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en10)) AND (_FrameInRange(en10) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en11)) AND (_FrameInRange(en11) < range)){ cnt = cnt + 1; }
  }
  block
  {
  if((_ACTOR_GetState(en12)) AND (_FrameInRange(en12) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en13)) AND (_FrameInRange(en13) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en14)) AND (_FrameInRange(en14) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en15)) AND (_FrameInRange(en15) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en16)) AND (_FrameInRange(en16) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en17)) AND (_FrameInRange(en17) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en18)) AND (_FrameInRange(en18) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en19)) AND (_FrameInRange(en19) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en20)) AND (_FrameInRange(en20) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en21)) AND (_FrameInRange(en21) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en22)) AND (_FrameInRange(en22) < range)){ cnt = cnt + 1; }
  }
  block
  {
  if((_ACTOR_GetState(en23)) AND (_FrameInRange(en23) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en24)) AND (_FrameInRange(en24) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en25)) AND (_FrameInRange(en25) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en26)) AND (_FrameInRange(en26) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en27)) AND (_FrameInRange(en27) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en28)) AND (_FrameInRange(en28) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en29)) AND (_FrameInRange(en29) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en30)) AND (_FrameInRange(en30) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en31)) AND (_FrameInRange(en31) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en32)) AND (_FrameInRange(en32) < range)){ cnt = cnt + 1; }
  if((_ACTOR_GetState(en33)) AND (_FrameInRange(en33) < range)){ cnt = cnt + 1; }
  }

  if(cnt > 10)
  {
    if(!aktivovano)
    {
      SendSignal(capture_activator, 1);
    }
    aktivovano = 1;
  }
  else
  {
    if(cnt < 6)
    {
      if(aktivovano)
      {
        SendSignal(capture_activator, 2);
      }
      aktivovano = 0;
    }
  }

  if(cnt < 10)					
  {
    delaytime = 10000  - (900 * cnt);
  }
  else
  {
    delaytime = 1000;
  }

  Delay(delaytime);
goto LOOP;

Label END: